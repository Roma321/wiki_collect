{
    "task": "У плагинов также есть важные преимущества.\n<<<Готовые программы, оттранслированные в машинный код, выполняются значительно быстрее скриптов, которые интерпретируются из исходного кода динамически при каждом исполнении. Большинство программ переносимы на уровне исходного кода и могут быть выполнены интерпретатором соответствующего языка подобно скриптам. Использование же байт-кода  позволяет хранить, переносить и исполнять программы более эффективным образом, нежели скрипты.\nJIT-компиляция также позволяет оптимизировать общий код под конкретную платформу .\nПолный доступ к любому аппаратному обеспечению или ресурсу ОС . Плагины, работающие с аппаратным обеспечением, традиционно называют драйверами.\nЕсли предполагается интенсивный обмен данными между основной программой и пользовательским расширением, для плагина его обеспечить проще.\nДля компилируемых языков программирования характерно использование сильной статической системы типов, которая позволяет эффективно отлавливать ошибки и лучше оптимизировать код. Использование же в современных скриптах динамической типизации обусловлено скорее техническими особенностями реализации и историческими причинами. Также у статически типизированных языков есть потенциал для роста, а именно, переход с традиционной мономорфной типизации на полиморфную. Расширения мономорфизма в современных Си-подобных языках  и полиморфизм подтипов, а также параметрический полиморфизм и классы типов в экспериментальных языках  сценарным языкам недоступен .>>>",
    "correct": [
        [
            "Готовые программы, оттранслированные в машинный код, выполняются значительно быстрее скриптов, которые интерпретируются из исходного кода динамически при каждом исполнении. Большинство программ переносимы на уровне исходного кода и могут быть выполнены интерпретатором соответствующего языка подобно скриптам. Использование же байт-кода  позволяет хранить, переносить и исполнять программы более эффективным образом, нежели скрипты.",
            "JIT-компиляция также позволяет оптимизировать общий код под конкретную платформу .",
            "Полный доступ к любому аппаратному обеспечению или ресурсу ОС . Плагины, работающие с аппаратным обеспечением, традиционно называют драйверами.",
            "Если предполагается интенсивный обмен данными между основной программой и пользовательским расширением, для плагина его обеспечить проще.",
            "Для компилируемых языков программирования характерно использование сильной статической системы типов, которая позволяет эффективно отлавливать ошибки и лучше оптимизировать код. Использование же в современных скриптах динамической типизации обусловлено скорее техническими особенностями реализации и историческими причинами. Также у статически типизированных языков есть потенциал для роста, а именно, переход с традиционной мономорфной типизации на полиморфную. Расширения мономорфизма в современных Си-подобных языках  и полиморфизм подтипов, а также параметрический полиморфизм и классы типов в экспериментальных языках  сценарным языкам недоступен ."
        ]
    ],
    "wrong": [],
    "meta": {
        "type": "ul",
        "link": "https://ru.wikipedia.org/wiki/Сценарный_язык"
    }
}